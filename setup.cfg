# This file is used to configure your project.
# Read more about the various options under:
# http://setuptools.readthedocs.io/en/latest/setuptools.html#configuring-setup-using-setup-cfg-files

[metadata]
name = Assertt
description = the program is an asset manager tool
author = Lukas Einler Larsson
author-email = luei20@student.bth.se
license = mit
long-description = file: README.md
url = https://github.com/Itggot-lukas-einlerlarsson/assert
# Change if running only on Windows, Mac or Linux (comma-separated)
platforms = any
# Add here all kinds of additional classifiers as defined under
# https://pypi.python.org/pypi?%3Aaction=list_classifiers
classifiers =
    Development Status :: 4 - Beta
    Programming Language :: Python

[options]
zip_safe = True
packages = find:
include_package_data = True
package_dir =
    =assert
setup_requires = pyscaffold>=3.2a0,<3.3a0
install_requires = 
# The usage of test_requires is discouraged, see `Dependency Management` docs
tests_require = pytest; pytest-cov
python_requires >= 3.9

[options.packages.find]
where = assertt
exclude =
    tests

[options.extras_require]
# Add here additional requirements for extra features, to install with:
# `pip install my-code[PDF]` like:
# PDF = ReportLab; RXP
# Add here test requirements (semicolon/line-separated)
testing =
    pytest
    pytest-cov

[options.entry_points]
console_scripts =
    script_name = f0cal.my_code.module:function
# For example:
# console_scripts =
#     fibonacci = f0cal.my_code.skeleton:run
# And any other entry points, for example:
# pyscaffold.cli =
#     awesome = pyscaffoldext.awesome.extension:AwesomeExtension

[test]
# py.test options when running `python setup.py test`
addopts = --verbose
extras = True

[tool:pytest]
# Options for py.test:
# Specify command line options as you would do when invoking py.test directly.
# e.g. --cov-report html (or xml) for html/xml output or --junitxml junit.xml
# in order to write a coverage file that can be read by Jenkins.
addopts =
    --cov assertt/machine_manager.py --cov-report coverage.xml
    --verbose
norecursedirs =
    dist
    build
    .tox
testpaths = tests

[aliases]
dists = bdist_wheel

[bdist_wheel]
# Use this option if your package is pure-python
universal = 1

[flake8]
exclude =
    .tox
    build
    dist
    .eggs
#docs/conf.py

[pyscaffold]
# PyScaffold's parameters when the project was created.
# This will be used when updating. Do not change!
version = 1.0.0
package = assertt
extensions =
    tox
namespace = assert
